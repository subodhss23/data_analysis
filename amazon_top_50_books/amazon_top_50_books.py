# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

plt.style.use('ggplot')
pd.set_option('display.max_columns', 100)
pd.set_option('display.max_rows', 40)

df = pd.read_csv("/content/Amazon Top 50 Books 2009-2021 - Reworked Sheet (1).csv")

df.shape

df.head()

df.info()

df['Reviews'] = df['Reviews'].str.replace(',','').astype(int)

df['Price'] = df['Price'].str.replace('$', '').astype(float)

df["Price_r"] = df["Price_r"].str.replace('$','').astype(int)

df['Year'] = pd.to_datetime(df['Year']).dt.year

df.sample(2)

df.isna().sum()

df["Author"].value_counts()

# top ten writers with most books
df["Author"].value_counts().head(10).plot(kind="bar", figsize=(10, 5),y="count", title="Top 10 Writers with Most Books")

df["Year"].value_counts()

df.sample(2)

df.groupby("Genre")["Name"].count()

# plotting Fiction and Non-Fiction: By Genre
df.groupby("Genre")["Name"].count().plot(kind="bar", ylabel="count", title="Fiction Vs Non-Fiction Books: By Genre")

df["Price"].value_counts()

df.groupby("Genre")["Price"].mean()

# average price of a book: By Genre
df.groupby("Genre")["Price"].mean().plot(kind="bar", ylabel="average price", title="Average Price of a Book: By Genre")

df.groupby("Price")["Name"].unique()

df.sample(2)

df["User Rating"].value_counts()

# Number of user ratings
df["User Rating"].value_counts().plot(kind="bar", figsize=(10, 5), ylabel="count", title="Number of User Ratings", log=True)

df.drop(columns=["Year"], inplace=True)

df[(df["User Rating"] >= 4.8) & (df["Reviews"] >= 10000) & (df["Genre"] == "Non Fiction") & (df["Price"] < 20)]

df[(df["User Rating"] >= 4.8) & (df["Reviews"] >= 10000) & (df["Genre"] == "Non Fiction") & (df["Price"] < 20)]\
.groupby("User Rating")["Price"].mean()

"""The average price for books with user_rating of >= 4.8 and that has review of more than 10000, genre is Non Fiction and price below 20 dollar
for rating of 4.8, the price is 11.73 dollar and
for rating of 4.9, the price is 9.20 dollar

"""

df.sample(2)

df.sort_values("Reviews", ascending=False).head(10)

df.sort_values("Reviews", ascending=False).head(10).plot(kind="bar", figsize=(10, 5), x="Name", y="Reviews", title="Top 10 Books with Most Reviews")

df.groupby("Author")["Name"].sum().sort_values(ascending=False).head(10)

df.groupby("Author")["Name"].sum().sort_values(ascending=False).head(4)

df.sample(2)

# groupby name of the book by Author
df.groupby("Author")["Name"].unique()

df.sample(2)

df.drop(columns="Price_r", inplace=True)

df['User Rating'].plot(kind="hist", figsize=(10, 5), title="User Rating Distribution")

df['User Rating'].plot(kind="kde", figsize=(10, 5), title="User Rating Distribution")

df["Reviews"].plot(kind="box", figsize=(10, 5), title="Reviews Distribution")

# scatter plot
df.plot(kind="scatter", x="Reviews",xlabel="Reviews Count", y="User Rating", figsize=(10, 5), title="Reviews vs Rating")

df.plot(kind="hexbin", x="Reviews",xlabel="Reviews Count", y="User Rating", figsize=(10, 5), title="Reviews vs Rating")

# heatmap for correlation
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm")

# pairplot
sns.pairplot(df)
plt.show()

